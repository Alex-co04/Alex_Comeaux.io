{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Alex Comeaux","text":""},{"location":"#personal-info","title":"Personal Info","text":"<p>Contact Information:  Phone Number 6025277786 University Email amcomeau@asu.edu</p>"},{"location":"#bio","title":"Bio","text":"<p>Embedded Systems student attending Arizona State University. This project is part of the junior year innovation showcase at ASU polytechnic. The goal of this project is to develop a weather station with interactive and engaging exhibition that will educate k-12 students on how weather stations gather weather data.</p>"},{"location":"#links","title":"Links","text":"<p>Team Website: Click Here</p> <p>API Message Protocol</p>"},{"location":"API/","title":"API Documentation","text":""},{"location":"API/#application-programming-interface-api","title":"Application Programming Interface (API)","text":""},{"location":"API/#team-member-ids","title":"Team Member IDs","text":"Name Subsystem Address Char Add Alex Actuator <code>0x63</code> 'c' Aarshon HMI <code>0x61</code> 'a' Ian Sensor <code>0x69</code> 'i' KD Websocket <code>0x6B</code> 'k'"},{"location":"API/#outgoing-messages","title":"Outgoing Messages","text":""},{"location":"API/#subsystem-status-code","title":"Subsystem Status Code","text":"<p>Message type for sending status code of subsystem \"Z\" to be displayed.</p> . byte 1 byte 2 Variable Name msg_type error_code Variable Type char char Min Value 4 0 Max Value 4 2 code number meaning 0 full functionality 1 partial functionality 2 no functionality"},{"location":"API/#error-message","title":"Error Message","text":"<p>Message that contains specific error message byte 1 | byte 2-58 -------|---------------------------- <code>0x34</code> | Error Message char(<code>uint8_t</code>)</p>"},{"location":"API/#received-messages","title":"Received Messages","text":""},{"location":"API/#shift-motor","title":"Shift Motor","text":"<p>Message type for sending a command to rotate base stepper \"Y\" degrees.</p> byte 1 byte 2 byte 3 <code>0x32</code> X(<code>uint8_t</code>) Y(<code>uint8_t</code>) ~ direction0x01 = clockwise0x02 = counterclockwise degree shift"},{"location":"API/#message-structure-summary","title":"Message Structure Summary","text":"Byte Index Description Value Example [0] Start Byte 1 'A' [1] Start Byte 2 'Z' [2] Sender ID 'c' [3] Receiver ID 'a','k',etc. [4] msg_type <code>1</code> - <code>5</code> [5-n] Data / Message / Payload Varies [n+1] End Byte 1 'Y' [n+2] End Byte 2 'B'"},{"location":"Bill_Of_Materials/","title":"Bill of Materials","text":""},{"location":"Bill_Of_Materials/#overview","title":"Overview","text":"<p>This page contains the bill of materials for this project</p> <p></p>"},{"location":"Bill_Of_Materials/#download-bom","title":"\ud83d\udcc1 Download BOM","text":"<p>BOM</p>"},{"location":"Block_Diagram/","title":"Block Diagram","text":""},{"location":"Block_Diagram/#overview","title":"Overview","text":"<p>This page contains the block diagram for my motor subsystem. The block diagram includes two motor driver blocks, one for the stepper motor and the DC motor. The DC motor is controlled by an SPI motor driver, with a wide range of command and debug capabilities. Additionally, the MCU will be equipped with a UART module. The UART will be used for upstream and downstream communication to other subsystems, as well as for receiving the motor commands and necessary movement angles.</p> <p></p>"},{"location":"Block_Diagram/#decision-making-process","title":"Decision-Making Process","text":"<p>At the beginning of this project, the block diagram included several other components, such as independent photoresistors, a limit switch and a second DC motor. However, after review and PCB design, I came to the conclusion that the design needed to be as simple as possible. For this reason, there is only one DC motor that spins bi-directionally, and reading off the photoresistors as well as processing the logic is done in the sensor suite subsystem. These changes have enabled our team to properly delegate the work between each subsystem.</p>"},{"location":"Resources/","title":"Resources","text":""},{"location":"Resources/#download-the-mplabx-environment","title":"\ud83d\udcc1 Download the MPLABX Environment","text":"<p>Download MPLABX Code</p>"},{"location":"Resources/#download-the-pcb-file","title":"\ud83d\udcc1 Download the PCB File","text":"<p>Download Schematic Diagram PDF</p>"},{"location":"Resources/#download-cad-file","title":"\ud83d\udcc1 Download CAD file","text":"<p>Download CAD file</p>"},{"location":"component-selection/","title":"Component Selection","text":""},{"location":"component-selection/#introduction","title":"Introduction","text":"<p>The purpose of this project is to create an interactive and educational product for k-12 students to learn about weather and the weather cycle. In order to accomplish this, my subsystem comprises of a solar tracking array, consisting of a microcontroller, motor, motor driver, and light sensor. These components will all interface with the other subsystems and actively track either the most intense light in the environment, or track the position of the sun itself via local weather data.</p>"},{"location":"component-selection/#criteria","title":"Criteria","text":"<p>In order for this project to be successful, there are many criteria that must be met. Most importantly, the device must be functional and functional for long enough to serve as a useful teaching tool. In order to accomplish this, parts must be selected with quality and robustness in mind. Furthermore, the budget must be taken into consideration as well. If parts get too expensive, it is easy to exceed the projected budget. But most importantly, the parts were selected with compatability in mind. If the parts struggle to interface with each other, we will create unnecessary roadblocks for our team further down the line. Overall, the criteria for each selected part included quality, cost, and compatability among other things.</p>"},{"location":"component-selection/#components","title":"Components","text":""},{"location":"component-selection/#microcontroller","title":"Microcontroller","text":""},{"location":"component-selection/#option-1","title":"Option 1","text":"Option Pros Cons Unit Cost &amp; Link PIC16F18875 Multiple timers, hardware PWM, and various communication peripherals No WiFi/Bluetooth $1.82 (DigiKey)(https://www.digikey.com/en/products/detail/microchip-technology/PIC16F18875-I-PT/5803538) Supports I2C Limited RAM compared to ESP32 Reliable MPLAB XC8 &amp; MCC support 5V operation (compatible with most motor drivers)"},{"location":"component-selection/#option-2","title":"Option 2","text":"Option Pros Cons Unit Cost &amp; Link PIC18F47Q10 includes multiple timers, Configurable Logic Cells (CLC), ADCs, comparators, and communication modules (I2C, SPI, EUSART) No WiFi/Bluetooth $2.52 (DigiKey)(https://www.digikey.com/en/products/detail/microchip-technology/PIC18F47Q10-I-P/10187785) better power management modes and improved performance Limited RAM compared to ESP32 supported by the MPLAB\u00ae Snap In-Circuit Debugger/Programmer 5V operation (compatible with most motor drivers)"},{"location":"component-selection/#option-3","title":"Option 3","text":"Option Pros Cons Unit Cost &amp; Link PIC16F877A You can program and debug it via ICSP No WiFi/Bluetooth $1.82 (DigiKey)(https://www.digikey.com/en/products/detail/microchip-technology/PIC16F877A-I-P/446143) Very popular MCU to use, a lot of support online may need to write lower-level code to manage interrupts or to generate precise step timing Can run on very little power 5V operation (compatible with most motor drivers)"},{"location":"component-selection/#final-selection-pic18f47q10-option-2","title":"Final Selection: PIC18F47Q10 (Option 2)","text":""},{"location":"component-selection/#rationale","title":"Rationale:","text":"<p>The microcontroller I decided to use for this project was the PIC18F47Q10, as there is an abundance of resources and information online,  There also more examples online on how to use a stepper driver with this PIC controller than any other PIC controller. In addition to this, the microcontroller is proven to have reliable SPI connection as well as plenty of ram to control more than one motor driver. </p>"},{"location":"component-selection/#stepper-motor","title":"Stepper Motor","text":""},{"location":"component-selection/#option-1_1","title":"Option 1","text":"Option Pros Cons Unit Cost &amp; Link 1528-1367-ND Very common and widely supported by a variety of stepper drivers like the ULN2003 Slightly expensive $14.00 (Adafruit) (https://www.adafruit.com/product/324) Offers a good balance between torque and size/weight Potentially No Integrated Gearbox Mid range torque 9-12V (compatible with most motor drivers)"},{"location":"component-selection/#option-2_1","title":"Option 2","text":"Option Pros Cons Unit Cost &amp; Link QSH4218-35-10-027 High Precision Very expensive $50.00 (Digikey) (https://www.digikey.com/en/products/detail/analog-devices-inc-maxim-integrated/QSH4218-35-10-027/4843425) Cheaper than other options May require a gearbox High torque at low voltage 5V operational voltage"},{"location":"component-selection/#final-selection-1528-1367-nd-option-1","title":"Final Selection: 1528-1367-ND (Option 1)","text":""},{"location":"component-selection/#rationale_1","title":"Rationale:","text":"<p>The actuator I decided to go with for this project is option 1, the Nema 14 stepper motor. This option is the most realistic as it will be easiest to interface with a stepper driver and PIC microcontroller. Additionally, this actuator is the easiest to use in terms of precise movement.  </p>"},{"location":"component-selection/#serial-communication-dc-motor-driver","title":"Serial Communication DC Motor Driver","text":""},{"location":"component-selection/#option-1_2","title":"Option 1","text":"Option Pros Cons Unit Cost &amp; Link IFX9201SG Minimal surrounding circuitry Only 1 motor control $3.45 (Digikey) (https://www.digikey.com/en/products/detail/infineon-technologies/IFX9201SGAUMA1/5415542?s=N4IgTCBcDaIJIDEAaBOMAGAjAZQOIgF0BfIA) Inexpensive Possible heat sink needed Resources available for integration"},{"location":"component-selection/#option-2_2","title":"Option 2","text":"Option Pros Cons Unit Cost &amp; Link DRV8830 Common Motor Driver Limited resources online 2.09 (Digikey) (https://www.digikey.com/en/products/detail/texas-instruments/DRV8830DGQR/2520903) I2C compatability I2C may be harder to interface than SPI Simple surrounding circuitry 5-6V operational voltage"},{"location":"component-selection/#final-selection-ifx9201sg-option-1","title":"Final Selection: IFX9201SG (Option 1)","text":""},{"location":"component-selection/#rationale_2","title":"Rationale:","text":"<p>The driver I decided to go with for the DC motor was option 1. This is because the surrounding circuitry is easier to set up, and there are more resources at my disposal for integration. Additionally, the motor driver is proven to be working with the PIC18F47Q10 through SPI serial communication. </p>"},{"location":"component-selection/#stepper-motor-driver","title":"Stepper Motor Driver","text":""},{"location":"component-selection/#option-1_3","title":"Option 1","text":"Option Pros Cons Unit Cost &amp; Link A4988 Designed for bipolar stepper motors Overheats quickly at higher currents $4.26 (Digikey) (https://www.digikey.com/en/products/detail/allegro-microsystems/A4988SETTR-T/2237991?s=N4IgTCBcDaIIIBYCcAOFIC6BfIA) Requires only two control signals No reverse voltage protection Functional with a wide range of motors 8-35V"},{"location":"component-selection/#option-2_3","title":"Option 2","text":"Option Pros Cons Unit Cost &amp; Link ULN2003 Can drive multiple loads Overheats very quickly at higher currents $.43 (Digikey) (https://www.digikey.com/en/products/detail/stmicroelectronics/ULN2003A/599603) Protects against voltage spikes from inductive loads Designed only for unipolar motors Cost effective 6-50V"},{"location":"component-selection/#final-selection-uln2003-option-2","title":"Final Selection: ULN2003 (Option 2)","text":""},{"location":"component-selection/#rationale_3","title":"Rationale:","text":"<p>I concluded that this driver was the most suitable for my project because most of the online resources on how to control stepper motors used this particular driver. Additionally, although it lacks reverse voltage protection, it is not difficult to implement flyback diodes. </p>"},{"location":"component-selection/#power-regulation","title":"Power Regulation","text":"<p>This project will require two seperate voltage lines, and therefore two voltage regulators. The motors pull too much current to be connected to the same line as the drivers and microcontroller. </p>"},{"location":"component-selection/#5v-line","title":"5V Line","text":""},{"location":"component-selection/#option-1_4","title":"Option 1","text":"Option Pros Cons Unit Cost &amp; Link LM2575T Switching Regulator Detailed datasheet Only one 5v output $1.15 (Digikey) (https://www.digikey.com/en/products/detail/advanced-photonix/PDV-P9203/480628?s=N4IgTCBcDaIAoBEBqBaOBOMAGAzCAugL5A) Simple to interface Relatively expensive Can handle high voltage in (up to 40V)"},{"location":"component-selection/#option-2_4","title":"Option 2","text":"Option Pros Cons Unit Cost &amp; Link UA7812CKCSE3 Switching Regulator Cost effective Relatively inefficient $.85 (Digikey) (https://www.digikey.com/en/products/detail/rochester-electronics,-llc/UA7812CKCSE3/13464984?gclsrc=aw.ds&amp;&amp;utm_adgroup=Integrated%20Circuits%20%28ICs%29&amp;utm_source=google&amp;utm_medium=cpc&amp;utm_campaign=Shopping_DK%2BSupplier_Rochester&amp;utm_term=&amp;utm_content=Integrated%20Circuits%20%28ICs%29&amp;utm_id=go_cmp-14247218536_adg-128566365520_ad-539599078936_pla-354083419805_dev-c_ext-_prd-13464984_sig-CjwKCAiAlPu9BhAjEiwA5NDSA5MPX2QTXo8NFO1wKjSwAMdMx7QoN-i5GsXDH0R884UZbLYzVt-gwxoCvdEQAvD_BwE&amp;gad_source=1&amp;gclid=CjwKCAiAlPu9BhAjEiwA5NDSA5MPX2QTXo8NFO1wKjSwAMdMx7QoN-i5GsXDH0R884UZbLYzVt-gwxoCvdEQAvD_BwE) Simple to interface Can handle high voltage in (up to 24V)"},{"location":"component-selection/#final-selection-lm2575t-option-1","title":"Final Selection: LM2575T (Option 1)","text":""},{"location":"component-selection/#rationale_4","title":"Rationale:","text":"<p>I came to the conclusion that the first option would be best, as I need a robust and easy to interface voltage regulator. The first option has a very detailed datasheet with several example application diagrams, which will streamline the power supply design process.</p>"},{"location":"component-selection/#33v-line","title":"3.3V Line","text":""},{"location":"component-selection/#option-1_5","title":"Option 1","text":"Option Pros Cons Unit Cost &amp; Link AP63203WU-7 Switching Regulator 2A output current Mildly complicated application diagram $1.38 (Digikey) (https://www.digikey.com/en/products/detail/diodes-incorporated/AP63203WU-7/9858426?s=N4IgTCBcDaIIIAUBsBmMAGFB1AqgWgHYQBdAXyA) 6-40V input voltage Potential for switching noise Inexpensive"},{"location":"component-selection/#option-2_5","title":"Option 2","text":"Option Pros Cons Unit Cost &amp; Link 1589-MP1584EN-LF-PTR-ND Buck Converter Up to 3A current capacity Complicated schematic $1.15 (Digikey) https://www.digikey.com/en/products/detail/advanced-photonix/PDV-P9203/480628?s=N4IgTCBcDaIAoBEBqBaOBOMAGAzCAugL5A 6-28V input voltage Relatively expensive Efficient"},{"location":"component-selection/#final-selection-switching-regulator-option-1","title":"Final Selection: Switching Regulator (Option 1)","text":""},{"location":"component-selection/#rationale_5","title":"Rationale:","text":"<p>I ultimately decided that the switching regulator would be the best choice for this application. Not only is it reliable and cheap, it would supply more than enough amperage for the logic on the microcontroller and other drivers. </p>"},{"location":"component-selection/#final-major-components-selected","title":"Final Major Components Selected:","text":"Component Name Selection Microcontroller PIC18F47Q10-I/QT Volatage Regulator 3.3 AP63203WU-7 Voltage Regulator 5.0 LM2575 DC Motor Driver IFX9201SG Stepper Motor Driver ULN2003 Stepper Motor 1528-1367-ND"},{"location":"component-selection/#power-budget","title":"Power Budget","text":"<p>The following is the power budget for each component selected</p> <p></p> <p>I used the power budget in order to estimate how much power the system would be pulling if it was using all of its capability at once. This way, I could plan accordingly as I designed by PCB and ordered fuses. The final current draw, 1400 mA, seems high but it would only reach this number if both motors were running at full speed. Since I knew that the system should never exceed 1400 mA, I ordered a 1.5 A fuse to protect the circuit in case of a short. </p>"},{"location":"component-selection/#mcc-setup","title":"MCC Setup","text":""},{"location":"component-selection/#final-decision-making-process","title":"Final Decision-Making Process","text":"<p>There were many factors that went into choosing each component that would be on the final PCB. For one, all of the motor drivers had to be compatible with the PIC MCU. I wanted to find drivers that would work without needed overly complex code. The SPI driver is a good example of this, as it requires only three lines of code to turn the motor one way or another. Additionally, there are two separate voltage regulators on this board. I did this because I found it would be more reliable to run all the logic of each chip off of one 3.3 volt line, and run the motors off their own 5 volt line, reducing the risk of current overdraw and noise. In order to meet all the project requirements, I ensured all the components were surface mount, and included a motor driver that uses a serial communication protocol to send and receive messages. </p>"},{"location":"schematic/","title":"Schematic","text":""},{"location":"schematic/#overview","title":"Overview","text":"<p>This page contains the schematic diagram for this subsystem. The design of this PCB is primarily meant to accomplish two objectives. One, that it includes all the necessary requirements given to us for this class. And two, that it allows any student in the k-12 system to grasp certain concepts in both embedded systems and weather monitoring. In terms of this first objective this PCB design incorporates all the the necessary design criteria outlined in the syllabus. No daughter-boards, all surface mount components, two switching voltage regulators, and is designed to be modular with any other PCB capable of two-way UART communication. Circling back to the first objective, the whole purpose of this design is to create a smart weather station to help k-12 students understand how weather stations and other electronic devices collect and process data. The intention of this particular subsystem is to control the motors for the solar array, one to adjust the tilt angle of the panel and the other to change the angle of the base. Receiving the data from the sensor system, processing it, and then changing the angle of the base or panel given that information is a key part of how this weather station demonstrates the capabilities of modular micro-controllers.</p>"},{"location":"schematic/#schematic-image","title":"Schematic Image","text":""},{"location":"schematic/#pcb-design","title":"PCB Design","text":""},{"location":"schematic/#front-image","title":"Front image","text":""},{"location":"schematic/#rear-image","title":"Rear image","text":""},{"location":"schematic/#hardware-design-reflection","title":"Hardware Design Reflection","text":"<p>There are several things I could have done differently in order to improve the hardware of this design. However, overall my design was a success and needed nearly zero additions to enable functionality. There was only one minor mistake made in terms of the schematic design, in that for the 3.3 volt regulator I was missing a capacitor in series with C7. This was a simple fix. Other than that, I believe that if I had better organized the pinout of the PIC, I could have fit all of the components on one single layer, reducing the potential manufacturing cost. More than this, I most definitely could have included more test points. A lack of test points proved to be annoying, to say the least. In the end, this schematic design proved to be pretty functional and easy to integrate with the other subsystems on the team.</p>"},{"location":"second-page/","title":"Second Page","text":"<p>Things to discuss</p>"},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"},{"location":"subfolder/","title":"This is the index to a subfolder","text":"<p>Things to discuss</p>"},{"location":"subfolder/another-subfile/","title":"This is a secondary sub page","text":"<p>Things to discuss</p>"}]}